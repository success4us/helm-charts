image:
  repository: phx.ocir.io/axk4nd7kqcb4/csapi
  pullPolicy: Always
  # Overrides the image tag whose default is the chart version.
  tag: "${BUILDRUN_HASH}"
imagePullSecrets:
- name: ocirsecret

ingress:
  enabled: true
  annotations: 
    nginx.ingress.kubernetes.io/proxy-body-size: 100m   
    certmanager.k8s.io/cluster-issuer: letsencrypt-cluster-issuer
    nginx.ingress.kubernetes.io/proxy-read-timeout: 1800s
    nginx.ingress.kubernetes.io/proxy-send-timeout: 1800s  
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 120s
    nginx.ingress.kubernetes.io/server-snippet: |-
      location ~* "^/metrics" {
          deny all;
          return 403;
      }

  hosts:
    host: "${ENV}.success4.us"
    apipath: /
    staticpath: /static
    authhost: "auth.${ENV}.success4.us"
    
  tls:
    secretName: csapi-app-tls
    hosts:
      - "${ENV}.success4.us"
      - "auth.${ENV}.success4.us"

email: demo@success4.io

configmap:
  broker_url: amqp://user:QxdId1hcQo@rabbitmq:5672
  backend_url: rpc://
  cc_url: http://control-center/scheduler/
  celery_backend: rpc://
  db_engine: tenant_schemas.postgresql_backend
  host_domain: success4.us
  idp_server: "https://auth.${ENV}.success4.us/login"
  org_name: self05company
  schema_name: success4
  spark_cluster: --master spark:spark-master:7077
  spark_mode: remote
  sso_url: "https://auth.${ENV}.success4.us"
  utils_path: /cs4/utils/
  minio_end_point_url: "https://${ENV}.minio.success4.us"
  minio_browser_endpoint_url: "https://${ENV}.minio.success4.us"
  ip_whitelist_range: 10.0.0.0/8
  environment: prod
  kafka_url: kafka
  kafka_port: "9092"
  countly_app_key: _countlyappkey_
  connection_timeout: 180
  redis_host: redis-master
  redis_port: "6379"
  connection_max_age: "180"
  cache_ttl: \"15\"
  version: "_tag_"